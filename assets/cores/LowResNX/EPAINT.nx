''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
' 
'  	TITLE: 			EPAINT.NX
' 	VERSION:		1.1
' 	AUTHOR:			ERIC ISON													
' 	DATE:			12/31/2020 
' 	DESCRIPTION:	A SIMPLE TAP/CLICK-TO-DRAW PIXEL-BASED EDITOR FEATURING:
' 					- 120X128 SIZED CANVAS
' 					- 1X1- AND 3X3-SIZED PAINT BRUSHES
' 					- CONTINUOUS, SMOOTH TOUCH DRAWING WITH LINES OF 
' 					  CONTIGUOUS PIXELS
' 					- RANDOM PALETTE SWITCHING
' 					- AUTO/QUICK-SAVING TO PERSISTENT RAM
' 					- LOADING/SAVING TO ROM FILE
' 					* V1.1 FIXED A FEW TILES THAT WOULDNT RECV PAINT
' 
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''



'-------------------------------------------------------------------------------
'	RAM MAP
'-------------------------------------------------------------------------------

GLOBAL 		SAVERAM, USERBG

SAVERAM		= $E000
USERBG		= $8100



'-------------------------------------------------------------------------------
'	FILE/ROM ACCESS
'-------------------------------------------------------------------------------

GLOBAL 		BGFILE, BGSIZE

BGFILE		= 5
BGSIZE		= 3840



'-------------------------------------------------------------------------------
'	GRAPHICS/DRAWING
'-------------------------------------------------------------------------------

GLOBAL 		BOTTOMY, DRAG, LASTX, LASTY, LEFTX, MAXRGBIDX 
GLOBAL 		PEN, PW, RGBIDX, RGBCOUNT, RIGHTX
DIM GLOBAL	ARGB(15, 3)

BOTTOMY		= 15*8
DRAG		= 0
LASTX		= 0
LASTY		= 0
LEFTX		= 2*8
MAXRGBIDX	= 15
PEN			= 0
PW			= 1
RGBIDX		= 0
RGBCOUNT	= 0
RIGHTX		= LEFTX+16*8



'-------------------------------------------------------------------------------
'	INITIALIZATION
'-------------------------------------------------------------------------------
SYSTEM 0,1

CALL INITME
CALL MAINPROC




'===============================================================================
'
'	SUBROUTINES
'
'===============================================================================



'-------------------------------------------------------------------------------
SUB MAINPROC
'-------------------------------------------------------------------------------
	TOUCHSCREEN
	
	DO	  
		IF TOUCH THEN 
			CALL DOTOUCH(TOUCH.X,TOUCH.Y) 
		ELSE 
			CALL PENUP
		END IF
			
		IF TAP THEN 
			CALL DOTAP(TOUCH.X,TOUCH.Y)
		END IF
			
		WAIT VBL
	LOOP
	
END SUB
'-------------------------------------------------------------------------------



'-------------------------------------------------------------------------------
SUB INITME
'-------------------------------------------------------------------------------
	BG SOURCE ROM(3)
	BG COPY 0,0,20,16 TO 0,0
	
	I=16
	ATTR(0,0,0,0,0)
	FOR CY=0 TO 14
		FOR CX=0 TO 15
			CELL CX+2,CY,I
			I=I+1
		NEXT CX
	NEXT CY	
	
	FILL USERBG,BGSIZE,0

	WHILE RGBCOUNT<=MAXRGBIDX
			CALL SETPAL(RGBCOUNT)
			INC RGBCOUNT
	WEND
	
	COPY SAVERAM,BGSIZE TO USERBG
	CALL BLOADBG
	
END SUB
'-------------------------------------------------------------------------------



'-------------------------------------------------------------------------------
SUB PENUP
'-------------------------------------------------------------------------------
	IF DRAG<>0 THEN
		DRAG=0
		LASTX=0
		LASTY=0
	END IF
	
END SUB
'-------------------------------------------------------------------------------



'-------------------------------------------------------------------------------
SUB DOTAP(TX,TY)
'-------------------------------------------------------------------------------
	IF TX<16 AND TY<8 THEN
	    FILL USERBG, BGSIZE, 0
	    FILL SAVERAM, BGSIZE, 0
	ELSE IF TX>=152 AND TY>=32 AND TY<40 THEN 
		PEN=3
	ELSE IF TX>=152 AND TY>=24 AND TY<32 THEN 
		PEN=2
	ELSE IF TX>=152 AND TY>=16 AND TY<24 THEN 
		PEN=1
	ELSE IF TX>=152 AND TY>=8 AND TY<16 THEN 
		PEN=0
	ELSE IF TX>=152 AND TY>=56 AND TY<64 THEN
		PW=1
	ELSE IF TX>=152 AND TY>=64 AND TY<72 THEN
		PW=2
	ELSE IF TX>=152 AND TY>=88 AND TY<96 THEN
		CALL PALUP
	ELSE IF TX>=152 AND TY>=96 AND TY<104 THEN
		CALL PALDOWN
	ELSE IF TX<8 AND TY >=8 AND TY <16 THEN
		CALL BSAVEBG
	END IF
	
END SUB
'-------------------------------------------------------------------------------



'-------------------------------------------------------------------------------
SUB DOTOUCH(TX,TY)		
'-------------------------------------------------------------------------------
	IF TX>LEFTX AND TX<RIGHTX AND TY<BOTTOMY THEN 
		IF DRAG<>0 THEN
			CALL DRAWLINE(TX,TY,PEN)
		ELSE			
			CALL DODRAW(TX,TY,PEN)
		END IF
		LASTX=TX
		LASTY=TY
		DRAG=-1	
	ELSE
		CALL PENUP
	END IF		
	
END SUB
'-------------------------------------------------------------------------------



'-------------------------------------------------------------------------------
SUB DODRAW(TX,TY,BP)
'-------------------------------------------------------------------------------
	IF PW=1 THEN
		CALL _DODRAW(TX,TY,BP)
	ELSE IF PW=2 THEN
		CALL _DODRAW(TX,TY,BP)
		IF TX>LEFTX THEN CALL _DODRAW(TX-1,TY,BP)
		IF TX<RIGHTX THEN CALL _DODRAW(TX+1,TY,BP)
		IF TY>0 THEN CALL _DODRAW(TX,TY-1,BP)
		IF TY<BOTTOMY THEN CALL _DODRAW(TX,TY+1,BP)
	END IF
	
END SUB
'-------------------------------------------------------------------------------



'-------------------------------------------------------------------------------
SUB _DODRAW(TX,TY,BP)
'-------------------------------------------------------------------------------
	IF TX<=LEFTX OR TX>=RIGHTX OR TY >= BOTTOMY THEN EXIT SUB
   CY=INT(TY/8)
	CX=INT(TX/8)-2
	CI=CY*16+CX
	BI=2^(7-(TX MOD 8))	
	
	AOFF=CI*16+(TY MOD 8)
	A=$8100+AOFF
	IF BP=1 OR BP=3 THEN 
		POKE A,PEEK(A) AND (%11111111 XOR BI)
	ELSE IF BP=0 OR BP=2 THEN
		POKE A,PEEK(A) OR BI
	END IF
	POKE SAVERAM+AOFF,PEEK(A)
	
	A=$8100+AOFF+8
	IF BP=0 OR BP=3 THEN
		POKE A,PEEK(A) AND (%11111111 XOR BI)
	ELSE IF BP=1 OR BP=2 THEN
		POKE A,PEEK(A) OR BI
	END IF				
	POKE SAVERAM+AOFF+8,PEEK(A)
	
END SUB
'-------------------------------------------------------------------------------



'-------------------------------------------------------------------------------
SUB LINEUP(FROMX,FROMY,TOY,BP)
'-------------------------------------------------------------------------------
	FOR I=TOY TO FROMY
		CALL DODRAW(FROMX,I,BP)
	NEXT I
	
END SUB
'-------------------------------------------------------------------------------



'-------------------------------------------------------------------------------
SUB LINEDOWN(FROMX,FROMY,TOY,BP)
'-------------------------------------------------------------------------------
	FOR I=FROMY TO TOY
		CALL DODRAW(FROMX,I,BP)
	NEXT I
	
END SUB
'-------------------------------------------------------------------------------



'-------------------------------------------------------------------------------
SUB LINELEFT(FROMX,FROMY,TOX,BP)
'-------------------------------------------------------------------------------
	FOR I=TOX TO FROMX
		CALL DODRAW(I,FROMY,BP)
	NEXT I
	
END SUB
'-------------------------------------------------------------------------------



'-------------------------------------------------------------------------------
SUB LINERIGHT(FROMX,FROMY,TOX,BP)
'-------------------------------------------------------------------------------
	FOR I=FROMX TO TOX
		CALL DODRAW(I,FROMY,BP)
	NEXT I
	
END SUB
'-------------------------------------------------------------------------------



'-------------------------------------------------------------------------------
SUB LINEUPLEFT(FROMX,FROMY,TOX,TOY,BP)
'-------------------------------------------------------------------------------
	DX=ABS(FROMX-TOX)
	DY=ABS(FROMY-TOY)
	PTX=FROMX
	PTY=FROMY	
	IF DX<DY THEN
		SLOPE=DX/DY		
		FOR I=0 TO DY
			CALL DODRAW(INT(PTX),PTY-I,BP)
			ADD PTX,-SLOPE			
		NEXT I
	ELSE
		SLOPE=DY/DX		
		FOR J=0 TO DX
			CALL DODRAW(PTX-J,INT(PTY),BP)			
			ADD PTY,-SLOPE
		NEXT J
	END IF
	
END SUB
'-------------------------------------------------------------------------------



'-------------------------------------------------------------------------------
SUB LINEUPRIGHT(FROMX,FROMY,TOX,TOY,BP)
'-------------------------------------------------------------------------------
	DX=ABS(FROMX-TOX)
	DY=ABS(FROMY-TOY)	
	PTX=FROMX
	PTY=FROMY 
	IF DX<DY THEN
		SLOPE=DX/DY
		FOR I=0 TO DY
			CALL DODRAW(INT(PTX),PTY-I,BP)
			ADD PTX,SLOPE			
		NEXT I
	ELSE
		SLOPE=DY/DX
		FOR J=0 TO DX
			CALL DODRAW(PTX+J,INT(PTY),BP)			
			ADD PTY,-SLOPE
		NEXT J
	END IF
	
END SUB
'-------------------------------------------------------------------------------



'-------------------------------------------------------------------------------
SUB LINEDOWNLEFT(FROMX,FROMY,TOX,TOY,BP)
'-------------------------------------------------------------------------------
	DX=ABS(FROMX-TOX)
	DY=ABS(FROMY-TOY)	
	PTX=FROMX
	PTY=FROMY 
	IF DX<DY THEN
		SLOPE=DX/DY
		FOR I=0 TO DY
			CALL DODRAW(INT(PTX),PTY+I,BP)
			ADD PTX,-SLOPE
		NEXT I
	ELSE
		SLOPE=DY/DX
		FOR J=0 TO DX
			CALL DODRAW(PTX-J,INT(PTY),BP)
			ADD PTY,SLOPE
		NEXT J
	END IF
	
END SUB
'-------------------------------------------------------------------------------



'-------------------------------------------------------------------------------
SUB LINEDOWNRIGHT(FROMX,FROMY,TOX,TOY,BP)
'-------------------------------------------------------------------------------
	DX=ABS(FROMX-TOX)
	DY=ABS(FROMY-TOY)	
	PTX=FROMX
	PTY=FROMY 
	IF DX<DY THEN	
		SLOPE=DX/DY
		FOR I=0 TO DY
			CALL DODRAW(INT(PTX),PTY+I,BP)
			ADD PTX,SLOPE
		NEXT I
	ELSE
		SLOPE=DY/DX
		FOR J=0 TO DX
			CALL DODRAW(PTX+J,INT(PTY),BP)			
			ADD PTY,SLOPE
		NEXT J
	END IF
	
END SUB
'-------------------------------------------------------------------------------



'-------------------------------------------------------------------------------
SUB DRAWLINE(TX,TY,BP)
'-------------------------------------------------------------------------------
	DX=TX-LASTX
	DY=TY-LASTY
	IF DX=0 THEN
		IF DY<0 THEN 
			CALL LINEUP(LASTX,LASTY,TY,BP)
		ELSE 
			CALL LINEDOWN(LASTX,LASTY,TY,BP)
		END IF
	ELSE IF DY=0 THEN
		IF DX<0 THEN 
			CALL LINELEFT(LASTX,LASTY,TX,BP)
		ELSE 
			CALL LINERIGHT(LASTX,LASTY,TX,BP)
		END IF
	ELSE
		IF DX<0 THEN
			IF DY<0 THEN
				CALL LINEUPLEFT(LASTX,LASTY,TX,TY,BP)
			ELSE
				CALL LINEDOWNLEFT(LASTX,LASTY,TX,TY,BP)
			END IF
		ELSE
			IF DY<0 THEN
				CALL LINEUPRIGHT(LASTX,LASTY,TX,TY,BP)
			ELSE
				CALL LINEDOWNRIGHT(LASTX,LASTY,TX,TY,BP)
			END IF
		END IF
	END IF 
	
END SUB
'-------------------------------------------------------------------------------


	
'-------------------------------------------------------------------------------
SUB SETPAL(IDX)
'-------------------------------------------------------------------------------
	RGBA	= 0
	RGBB	= 0
	RGBC	= 0
	WHILE RGBA=0 OR RGBB=0 OR RGBC=0
		R		= RND(3)*16
		G		= RND(3)*4
		B		= RND(3)
		RGBA	= R+G+B
		
		R		= RND(3)*16
		G		= RND(3)*4
		B		= RND(3)
		RGBB	= R+G+B

		R		= RND(3)*16
		G		= RND(3)*4
		B		= RND(3)
		RGBC	= R+G+B
	WEND
		RGBLO		= MIN(RGBA, MIN(RGBB, RGBC))
		RGBHI		= MAX(RGBA, MAX(RGBB, RGBC))
		RGBMID		= (RGBA + RGBB + RGBC) - (RGBLO + RGBHI)
	ARGB(IDX, 0)	= RGBHI
	ARGB(IDX, 1)	= RGBMID
	ARGB(IDX, 2)	= RGBLO
END SUB
'-------------------------------------------------------------------------------



'-------------------------------------------------------------------------------
SUB PALUP
'-------------------------------------------------------------------------------
	IF RGBIDX<MAXRGBIDX THEN
		INC RGBIDX
		PALETTE 0, 0, ARGB(RGBIDX,0), ARGB(RGBIDX,1), ARGB(RGBIDX,2)
	END IF
	
END SUB
'-------------------------------------------------------------------------------



'-------------------------------------------------------------------------------
SUB PALDOWN
'-------------------------------------------------------------------------------
	IF RGBIDX>0 THEN
		DEC RGBIDX
		PALETTE 0,0, ARGB(RGBIDX,0), ARGB(RGBIDX,1), ARGB(RGBIDX,2)
	END IF
	
END SUB
'-------------------------------------------------------------------------------



'-------------------------------------------------------------------------------
SUB BSAVEBG
'-------------------------------------------------------------------------------
	F$	= FILE$(BGFILE)
	IF F$="" THEN F$="EPAINT"
	SAVE BGFILE, F$, USERBG, BGSIZE
	
END SUB
'-------------------------------------------------------------------------------


'-------------------------------------------------------------------------------
SUB BLOADBG	
'-------------------------------------------------------------------------------
	FILL USERBG, BGSIZE, 0
	FILL SAVERAM, BGSIZE, 0	
	LOAD BGFILE, USERBG
	COPY USERBG, BGSIZE TO SAVERAM
	
END SUB
'-------------------------------------------------------------------------------


'-------------------------------------------------------------------------------
SUB RESETME
'-------------------------------------------------------------------------------
	FILL USERBG,BGSIZE,0
	FILL SAVERAM,BGSIZE,0	
	
END SUB
'-------------------------------------------------------------------------------






':::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
'
'	ROM ENTRIES
'
':::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


#1:MAIN PALETTES
003F1510003F0904003E2410003F0600
00053F15001B3F15001B3F15003F2A15

#2:MAIN CHARACTERS
00000000000000000000000000000000
FFFFFFFFFFFFFFFF0000000000000000
FE8181999981817F017F7F6763737FFF
FE8199BDBD99817F017F6743416173FF
D4AAD4AAD4AAD4AA3C5A3C5A3C5A3C5A
CAB44AAC52A854003A5CBAFCFAA85400
FF8080808080807F007F655D5D647FFF
FE010101010101FF01FF9FAF9FAFFFFF
FE8191B9FD81817F017F6F4703417FFF
FE81FDB99181817F017F034163777FFF
0055AA55AA55AAFF0055AAFFFFAA5500
FEFFFDFDFDFDC37F013D4141414101FF
FEFFE1C1C1C1C37F013D5D7D7D7D01FF
FEFFDDFDFDFDC37F013D7D7D7D7D01FF
FEFFC5C5C5F9C37F013D6545457901FF
FE81BDADBDA5817F01010101010141FF

#3:MAIN BG
00001410062207220000000000000000
00000000000000000000000000000000
0000000000000000051C0A0C0F220414
00000000000000000000000000000000
00000000000000000000000000000000
040C0B20011404140004000400000000
00000000000000000000000000000000
0000000000000000040C0C2001140414
00000000000000000000000000000000
00000000000000000000000000000000
041C0D20011404140000000000000000
00000000000000000000000000000000
0000000000000000041C0E2001140414
00000000000000000000000000000000
00000000000000000000000000000000
050C0A1C011404140000000000000000
00000000000000000000000000040000
0000000000000004051C0A0C01140414
00000000000000000000000000000000
00000000000400000000000000000004
040C0223011404140000000000000000
00000000000000000000000000040000
0000000000000000041C032301140414
00000000000000000000000000000000
00000000000400000000000000000000
050C0A1C011404140000000000000000
00000000000000000000000000040000
0000000000000000051C0A0C01140414
00000000000000000000000000000000
00000000000400000000000000000000
040C0821011404140000000000000000
00000000000000000000000000000000
0000000000000000041C092101140414
00000000000000000000000000000000
00000000000000000000000000000000
050C0A1C0A1405040000000000000000
00000000000000000000000000000000
000000000000000000000000051C0A0C
0A0C0A0C0A0C0A0C0A0C0A0C0A0C0A0C
0A040A040A040A040A040A040A040A04
0A040514

#5:EPAINT
0000000000070F070000000000070F07
0000000000FFC0FF0000000000FFFFFF
0000000000FF00FF0000000000FFFFFF
00000000FCFE0CF000000000FCFEFCFF
000000000000000000000000000000F0
00000000000000000000000000000001
000000040E1E3C78000000040E1E7CF8
00000000000000000000000000000000
000000040E0E0E06000000040E0E0E0E
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
0000000000040E0E0000000000040E0E
00000000000000000000000000000000
00000000000000000000000000000000
00000209050606020000060F07070703
03070300000000800307030000000080
E0C0000000000000E0C3040C00000000
0000000100073E7810E00001071F3E78
01072B9B73C30100070F3FFFF7C70701
E0800000008080C0E0800000008080C0
00000001050505050000030307070707
060700FBFBFF00000E0FFFFFFFFF0000
000010E8E8F014140000F0F8F8F81C1C
0000000000003F7F0000000601003F7F
000000000000FFFD00000000E03FFFFF
000000000000F8F00000000000FCFAF0
000000007FFF7F00000000007FFF7F00
07070707FFFFFF0707070707FFFFFF07
0000000006FFFEF80000000006FFFEF8
00000000000000000000000000000000
02010101010101010301010101010101
800080808080808080C0C0C0C0C0C0C0
00000000000000000000000000000000
70200000000000007020000000000000
01010101010101010101010101010101
4040404040404040C0C0C0C0C0C0C0C0
07070707070200000707070707020000
00000000000000000000000000030C10
14140C280830E0E01C1C1C3838F0E0E0
FF40000000000000FF40000000000000
FD38787070707838FF3A7A7272727838
E000000000000000E000000000000000
000000000103071F000000000103071F
070767F7EE8E8E0E070767F7EE8E8E0E
00000000000000000000000000000000
00000000000000000000000000000000
01010101000000000101010100000000
0040C0C080000000C0C0C0C080000000
00000000000000000000000000000000
00000000000000000000000000000000
01010101000000000101010100000000
40C0C0C0E0400000C0C0C0C0E0400000
00000003070300000000000307030000
010307FEFCF80000E10307FEFCF80000
C080000000000000C080000000000000
003E703F01000000003E7F3F01000000
383800FFFF0000003838FFFFFF000000
000000FFFF0000000000FFFFFF000000
3C7870A0000000013C78F0A000000001
1C1C1C38383878F01C1C1C38383878F0
00000000000000000000000000000000
000000000000000F000000000000000F
00207070707070FF00207070707070FF
00000000000000FF00000000000000FF
0000000000000CFE0000000000000CFE
00010000000000000001000000000000
C0E0E0E0F0781C0FC0E0E0E0F0781C0F
00000000077FFFF800000000077FFFF8
00000000008000000000000000800000
000000003F7F3F1C000000003F7F3F1C
00000000FFFFFF0000000000FFFFFF00
00000000C0E0F07000000000C0E0F070
00000000000000000000000000000000
00000000000000000000000000000000
03010000000000000301000000000000
E080000000000000E080000000000000
00000000000000180000000000000018
1F0F0000000000001F0F000000000000
FFFF707070707070FFFF707070707070
FFFF000000000000FFFF000000000000
FEF7070707070707FEF7070707070707
00000000000101000000000000010100
0F1F3F71EFDFCF800F1F3F71EFDFCF80
841EBCF8F0E0F070841EBCF8F0E0F070
0000000003073F7C0000000003073F7C
1C3838F0E0C000001C3838F0E0C00000
00000000000000000000000000000000
70707070707070E070707070707070E0
0000081C1C1C3F7F0000081C1C1C3F7F
0000000000FEFFFE0000000000FEFFFE
01030100000000000103010000000000
FFFFFF0000000000FFFFFF0000000000
FCFCFC0E0E0E0E0EFCFCFC0E0E0E0E0E
00000000000000000000000000000000
70707070707070707070707070707070
00000000000000000000000000000000
07070707070F3E7C07070707070F3E7C
00000000000000000000000000000000
00000000000000000000000000000000
381C1C1C1C0E0E0E381C1C1C1C0E0E0E
78200000000000007820000000000000
00000000000000010000000000000001
010307070E3C78F0010307070E3C78F0
C080010301000000C080010301000000
3F70F0E0800000033F70F0E080000003
7070707070F0E0C07070707070F0E0C0
00000000000000000000000000000000
00000000000000000000000000000000
0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E
00000000000000000000000000000000
70707020000000007070702000000000
00000000183C383800000000183C3838
30000000000000003000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
0E0E0E0E0E0400000E0E0E0E0E040000
00000000000000000000000000000000
03070E3C78F0400003070E3C78F04000
C080000000000000C080000000000000
000000013F7F3E00000000013F7F3E00
071F3CF8E0C00000071F3CF8E0C00000
C080000000000000C080000000000000
00000000000000000000000000000000
0000007FFF7F00000000007FFF7F0000
0E0E1CFEFFFE00000E0E1CFEFFFE0000
00000000000000000000000000000000
0000010307070E1C0000010307070E1C
78F0C0800000000078F0C08000000000
0000001F3F1F00000000001F3F1F0000
000000FCFEFC0000000000FCFEFC0000
00000001010000000000000101000000
000080C0C6EF7773000080C0C6EF7773
00000001030383830000000103038383
00000000808080800000000080808080
00000101010100000000010101010000
0080C0C0C0C0E0E00080C0C0C0C0E0E0
00000000000000000000000000000000
00000000000E1F0F00000000000E1F0F
00000000000000800000000000000080
00000000020707070000000002070707
00000000000000000000000000000000
0000000000070F7F0000000000070F7F
383870E0E0C08000383870E0E0C08000
00000000000000000000000000000000
7FFF7F00000000007FFF7F0000000000
FFFFFF0000000000FFFFFF0000000000
80C080000000000080C0800000000000
73732100000000007373210000000000
81810101010101018181010101010101
C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0
000F1F0F00010307000F1F0F00010307
5FFFFFEE1C3FFFFF5FFFFFEE1C3FFFFF
0080000000E0F0E00080000000E0F0E0
01000000000000000100000000000000
E0F87E1F06000000E0F87E1F06000000
070707070E0E0E1C070707070E0E0E1C
00000000000000000000000000000000
F870000000000000F870000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
000000000000013F000000000000013F
0101030F1F7CF8E00101030F1F7CF8E0
C0C0808000000000C0C0808000000000
0F1D0901010000000F1D090101000000
F0C0E0E0C0800000F0C0E0E0C0800000
00000000000000000000000000000000
00000000000000000000000000000000
000000000001070F000000000001070F
1C383870E0C0C0801C383870E0C0C080
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
7F3E0000000000007F3E000000000000
80000000000000008000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00007FFF7F00000000007FFF7F000000
1EF8F0E0000000001EF8F0E000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000
00000000000000000000000000000000

