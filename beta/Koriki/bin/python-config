#!/bin/sh

exit_with_usage ()
{
	echo "Usage: $0 --prefix|--exec-prefix|--includes|--libs|--cflags|--ldflags|--extension-suffix|--help|--configdir"
	exit $1
}

if [ "$1" = "" ] ; then
	exit_with_usage 1
fi

# Returns the actual prefix where this script was installed to.
installed_prefix ()
{
	RESULT=$(dirname $(cd $(dirname "$1") && pwd -P))
	if which readlink >/dev/null 2>&1 ; then
	RESULT=$(readlink -f "$RESULT")
	fi
	echo $RESULT
}

prefix_build="/mnt/SDCARD/Koriki"
prefix_real=$(installed_prefix "$0")

# Use sed to fix paths from their built to locations to their installed to locations.
prefix=$(echo "$prefix_build" | sed "s#$prefix_build#$prefix_real#")
exec_prefix_build="/mnt/SDCARD/Koriki"
exec_prefix=$(echo "$exec_prefix_build" | sed "s#$exec_prefix_build#$prefix_real#")
includedir=$(echo "${prefix}/include")
libdir=$(echo "${exec_prefix}/lib" | sed "s#$prefix_build#$prefix_real#")
CFLAGS=$(echo "-D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64  -Os  " | sed "s#$prefix_build#$prefix_real#")
VERSION="2.7"
LIBM="-lm"
LIBC=""
SYSLIBS="$LIBM $LIBC"
LIBS="-lpthread -ldl  -lpthread -lutil $SYSLIBS -lpython${VERSION}"
BASECFLAGS=" -fno-strict-aliasing"
LDLIBRARY="libpython${VERSION}.so"
LINKFORSHARED="-Xlinker -export-dynamic"
OPT="-DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes"
PY_ENABLE_SHARED="1"
LDVERSION="@LDVERSION@"
LIBDEST=${prefix}/lib/python${VERSION}
LIBPL=$(echo "/mnt/SDCARD/Koriki/lib/python2.7/config" | sed "s#$prefix_build#$prefix_real#")
SO=".so"
PYTHONFRAMEWORK=""
INCDIR="-I$includedir/python${VERSION}"
PLATINCDIR="-I$includedir/python${VERSION}"

# Scan for --help or unknown argument.
for ARG in $*
do
	case $ARG in
	--help)
		exit_with_usage 0
	;;
	--prefix|--exec-prefix|--includes|--libs|--cflags|--ldflags|--extension-suffix|--abiflags|--configdir)
	;;
	*)
		exit_with_usage 1
	;;
esac
done

for ARG in "$@"
do
	case "$ARG" in
	--prefix)
		echo "$prefix"
	;;
	--exec-prefix)
		echo "$exec_prefix"
	;;
	--includes)
		 echo "$INCDIR $PLATINCDIR"
	;;
	--cflags)
		echo "$INCDIR $PLATINCDIR $BASECFLAGS $CFLAGS $OPT"
	;;
	--libs)
		echo "$LIBS"
	;;
	--ldflags)
		LINKFORSHAREDUSED=
		if [ -z "$PYTHONFRAMEWORK" ] ; then
			LINKFORSHAREDUSED=$LINKFORSHARED
		fi
		LIBPLUSED=
		if [ "$PY_ENABLE_SHARED" = "0" ] ; then
			LIBPLUSED="-L$LIBPL"
		fi
		echo "$LIBPLUSED -L$libdir $LIBS $LINKFORSHAREDUSED"
	;;
	--extension-suffix)
		echo "$SO"
	;;
	--configdir)
		echo "$LIBPL"
	;;
esac
done
