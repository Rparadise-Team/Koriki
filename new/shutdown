#!/bin/sh

LOCK_FILE="/var/lock/_shutdown"


task_killer() {
	r=0
	for p in $1; do
		if [ -d "/proc/$p" ] && [ $p -ne $$ ]; then
			kill $2 $p
			r=1
		fi
	done
	return $r
}

kill_hooked_tasks() {
	c=0
	while [ $c -lt 5 ]; do
		pids=$(fuser -m /mnt/SDCARD)
		if task_killer "$pids" $1; then
			return
		fi
		sleep 0.05
		c=$((c + 1))
	done
}

if [ "$0" = "/tmp/_shutdown" ]; then
	if [ ! -f "$LOCK_FILE" ]; then
        touch "$LOCK_FILE"
    else
        echo "shutdown is running."
        exit 1
    fi
	
	killall -w retroarch
	killall -w simplemenu
	
	#killall -9 main # mandatory to avoid the suppression of .tmp_update !
	#killall -9 batmon
	#killall -9 keymon
	killall -9 runtime.sh
	killall -9 updater
	
	echo 0 > /sys/class/pwm/pwmchip0/pwm0/enable;
	echo "GUI_SHOW 0 off" > /proc/mi_modules/fb/mi_fb0
	
	sleep 1
	
	kill_hooked_tasks
	sleep 0.1
	kill_hooked_tasks -9

	sync

    if [ -f "/customer/app/axp_test" ]; then
	umount /etc/passwd /etc/group /etc/profile
	fi
	
	swapoff /mnt/SDCARD/cachefile
	umount -r /mnt/SDCARD
	umount /mnt/SDCARD
	
	export TZ=UTC+0
	hwclock -w

	sleep 1
	
    echo 48 > /sys/class/gpio/export
    echo out > /sys/class/gpio/gpio48/direction
    sleep 0.5 
    echo 1 > /sys/class/gpio/gpio48/value
	
	if [ "$1" = "-r" ]; then
		/sbin/reboot
	else
		if [ ! -f "/customer/app/axp_test" ]; then
			/sbin/reboot # no poweroff command on Miyoo Mini
		else
			/sbin/poweroff
		fi
	fi

fi

if [ ! -f /tmp/_shutdown ]; then
	cp -f "$0" /tmp/_shutdown
        chmod +x /tmp/_shutdown
fi

# run the script totally detached from current shell
pgrep -f /tmp/_shutdown || (
	set -m
	su root -c "/usr/bin/nohup /tmp/_shutdown $1 </dev/null >/dev/null 2>&1 &"
)

while true; do
	sleep 10
done
